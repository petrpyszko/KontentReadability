import { Elements } from '../../elements/elements';
var ContentItem = /** @class */ (function () {
    /**
    * Base class representing content item type. All content type models need to extend this class.
    * @constructor
    */
    function ContentItem(config) {
        this._config = config;
    }
    /**
     * Gets array of all elements assigned to content item.
     * This is an alternative to accessing elements via properties.
     */
    ContentItem.prototype.getAllElements = function () {
        var elements = [];
        // get all props
        for (var _i = 0, _a = Object.keys(this); _i < _a.length; _i++) {
            var key = _a[_i];
            var prop = this[key];
            if (prop instanceof Elements.BaseElement) {
                elements.push(prop);
            }
        }
        return elements;
    };
    return ContentItem;
}());
export { ContentItem };
var ContentItemSystemAttributes = /** @class */ (function () {
    function ContentItemSystemAttributes(data) {
        Object.assign(this, data);
    }
    return ContentItemSystemAttributes;
}());
export { ContentItemSystemAttributes };
var Link = /** @class */ (function () {
    function Link(data) {
        Object.assign(this, data);
    }
    return Link;
}());
export { Link };
var RichTextImage = /** @class */ (function () {
    function RichTextImage(data) {
        Object.assign(this, data);
    }
    return RichTextImage;
}());
export { RichTextImage };
export var RichTextItemDataType;
(function (RichTextItemDataType) {
    RichTextItemDataType["Item"] = "item";
})(RichTextItemDataType || (RichTextItemDataType = {}));
//# sourceMappingURL=item-models.js.map