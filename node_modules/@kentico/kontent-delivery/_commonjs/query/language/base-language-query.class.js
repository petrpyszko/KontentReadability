"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.BaseLanguageQuery = void 0;
var base_query_class_1 = require("../common/base-query.class");
var BaseLanguageQuery = /** @class */ (function (_super) {
    __extends(BaseLanguageQuery, _super);
    function BaseLanguageQuery(config, queryService) {
        var _this = _super.call(this, config, queryService) || this;
        _this.config = config;
        _this.queryService = queryService;
        /**
         * Endpoint
         */
        _this.endpoint = 'languages';
        /**
         * Query configuration
         */
        _this._queryConfig = {};
        return _this;
    }
    /**
     * Used to configure query
     * @param queryConfig Query configuration
     */
    BaseLanguageQuery.prototype.queryConfig = function (queryConfig) {
        this._queryConfig = queryConfig;
        return this;
    };
    /**
     * Gets headers used by this query
     */
    BaseLanguageQuery.prototype.getHeaders = function () {
        return this.queryService.getHeaders(this._queryConfig);
    };
    BaseLanguageQuery.prototype.getLanguagesQueryUrl = function () {
        var action = '/' + this.endpoint;
        return _super.prototype.resolveUrlInternal.call(this, action);
    };
    BaseLanguageQuery.prototype.runLanguagesQuery = function () {
        return this.queryService.getLanguages(this.getLanguagesQueryUrl(), this._queryConfig);
    };
    return BaseLanguageQuery;
}(base_query_class_1.BaseQuery));
exports.BaseLanguageQuery = BaseLanguageQuery;
//# sourceMappingURL=base-language-query.class.js.map