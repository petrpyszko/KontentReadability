import { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';
import { IHttpDeleteQueryCall, IHttpGetQueryCall, IHttpPatchQueryCall, IHttpPostQueryCall, IHttpPutQueryCall, IHttpQueryOptions, IHttpRequestResult } from './http.models';
export declare function registerResponseInterceptor(instance: AxiosInstance, interceptor: (response: AxiosResponse<any>) => AxiosResponse<any>): void;
export declare function registerRequestInterceptor(instance: AxiosInstance, interceptor: (config: AxiosRequestConfig) => AxiosRequestConfig): void;
export declare function getCallback(instance: AxiosInstance, call: IHttpGetQueryCall, options: IHttpQueryOptions | undefined): Promise<IHttpRequestResult<AxiosResponse>>;
export declare function putCallback(instance: AxiosInstance, call: IHttpPutQueryCall, options: IHttpQueryOptions | undefined): Promise<IHttpRequestResult<AxiosResponse>>;
export declare function patchCallback(instance: AxiosInstance, call: IHttpPatchQueryCall, options: IHttpQueryOptions | undefined): Promise<IHttpRequestResult<AxiosResponse>>;
export declare function deleteCallback(instance: AxiosInstance, call: IHttpDeleteQueryCall, options: IHttpQueryOptions | undefined): Promise<IHttpRequestResult<AxiosResponse>>;
export declare function postCallback(instance: AxiosInstance, call: IHttpPostQueryCall, options: IHttpQueryOptions | undefined): Promise<IHttpRequestResult<AxiosResponse>>;
