var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Parameters } from '../../models';
import { BaseTaxonomyQuery } from './base-taxonomy-query.class';
var TaxonomiesQuery = /** @class */ (function (_super) {
    __extends(TaxonomiesQuery, _super);
    function TaxonomiesQuery(config, queryService) {
        var _this = _super.call(this, config, queryService) || this;
        _this.config = config;
        _this.queryService = queryService;
        return _this;
    }
    /**
    * Limits the number of taxonomies returned by query
    * @param limit Number of taxonomies to load
    */
    TaxonomiesQuery.prototype.limitParameter = function (limit) {
        this.parameters.push(new Parameters.LimitParameter(limit));
        return this;
    };
    /**
    * Skips the selected number of taxonomies
    * @param skip Number of taxonomies to skip
    */
    TaxonomiesQuery.prototype.skipParameter = function (skip) {
        this.parameters.push(new Parameters.SkipParameter(skip));
        return this;
    };
    /**
    * Gets the runnable Observable
    */
    TaxonomiesQuery.prototype.toObservable = function () {
        return _super.prototype.runTaxonomiesQuery.call(this);
    };
    // debug
    /**
    * Gets 'Url' representation of query
    */
    TaxonomiesQuery.prototype.getUrl = function () {
        return _super.prototype.getTaxonomiesQueryUrl.call(this);
    };
    return TaxonomiesQuery;
}(BaseTaxonomyQuery));
export { TaxonomiesQuery };
//# sourceMappingURL=taxonomies-query.class.js.map