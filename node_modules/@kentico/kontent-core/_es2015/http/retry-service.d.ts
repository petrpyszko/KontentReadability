import { IRetryStrategyOptions } from './http.models';
export declare class RetryService {
    private readonly retryAfterHeaderName;
    private readonly useRetryForStatusCodes;
    private readonly defaultRetryPolicy;
    getRetryStrategyFromStrategyOptions(retryOptions?: IRetryStrategyOptions): IRetryStrategyOptions;
    canRetryInTime(startTime: Date, maxCumulativeWaitTimeMs: number): {
        canRetry: boolean;
        differenceInMs: number;
    };
    /**
     * Logs attempt in console.
     * This function is also used for testing in jasmine spy
     */
    debugLogAttempt(attempt: number, waitTime: number): void;
    getNextWaitTimeMs(addJitter: boolean, deltaBackoffMs: number, retryAttempts: number, retryAfterInMs: number | undefined): number;
    canRetryErrorDefault(error: any): boolean;
    canRetryStatusCode(statusCode: number, useRetryForResponseCodes: number[]): boolean;
    isAxiosError(error: any): boolean;
    getStatusCodeFromError(error: any): number;
    tryGetRetryAfterInMsFromError(error: any): number | undefined;
    private tryGetAxiosError;
    /**
     * min and max included
     */
    private randomNumberFromInterval;
}
export declare const retryService: RetryService;
